<?php
    namespace App\Controller;

    use App\Controller\AppController;
    use App\Model\Entity\Image;

    class ImagesController extends AppController
    {
        public function initialize(): void
        {
            parent::initialize(); // TODO: Change the autogenerated stub
            $this->Authentication->allowUnauthenticated(['listing','onlyOne']);
        }

        public function listing($in = null)
        {
            $out = [];
            $imageEntity = $this->Images->find();
            foreach ($imageEntity as $image){
                $out[]= [
                    'id'=> $image->get('id'),
                    'file'=> $image->get('name')??'',
                    'description'=>$image->get('description')??'',


                ];

            }

//
            $out = array_slice($out,$this->getRequest()->getQuery('page')*10,10);



            $this->set(compact('out'));


        }

        public function onlyOne($in = null){

            $out =[];


            $imageEntity = $this->Images->get((integer)$in);

                $out= [
                    'id'=> $imageEntity->get('id'),
                    'file'=> $imageEntity->get('name')??'',
                    'description'=>$imageEntity->get('description')??'',
                    'created'=> $imageEntity->get('created')??'',


                ];




            $this->set(compact('out'));
        }

        public function add(){

            $imageEntity = $this->Images->newEmptyEntity();


            if(!empty($this->getRequest()->getData())){
                $img = $this->getRequest()->getData('image');
                $targetPath = 'img/'.$img->getClientFilename().'';


                $desc =$this->getRequest()->getData('description');






                if(file_exists($targetPath)){

                }else {
                    $img->moveTo($targetPath);
                    $size = getimagesize($targetPath);
                    $imageEntity->name=$img->getClientFilename();

                    $imageEntity->description= $desc;
                    $imageEntity->width= $size[0];
                    $imageEntity->height= $size[1];

                    $this->Images->save($imageEntity);



                }
            }
            $this->set(compact('imageEntity'));
        }

        public function delete($id){
           $imageEntity = $this->Images->get($id);
            unlink(WWW_ROOT."/img/".$imageEntity->name);
          $this->Images->delete($imageEntity);
        }
    }
